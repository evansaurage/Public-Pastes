Perfect! Here's the complete GitHub-ready Markdown version with proper formatting, collapsible sections, and safety notes:

```markdown
# üçè A1502 MacBook Pro Recovery Network Hardening Guide (2015‚Äì2017)

> **Use Case**: This guide is for advanced users or technicians working with an Intel-based **MacBook Pro A1502 (13", 2015‚Äì2017)** in **macOS Recovery Mode**. It provides a hardened, reliable networking setup for reinstalling macOS over hotel Wi-Fi or limited networks.

## ‚ö†Ô∏è Critical Safety Notice

**WARNING**: This guide modifies system networking configuration in Recovery Mode. Use only if:
- You have physical access to the A1502 MacBook Pro
- You understand these commands modify DNS and network settings
- You accept responsibility for any network connectivity changes
- You have a backup of important data (if accessible)

---

## üìã Table of Contents

- [‚úÖ Prerequisites](#-prerequisites)
- [üß∞ Step-by-Step Commands](#-step-by-step-commands)
- [üõ†Ô∏è Troubleshooting](#Ô∏è-troubleshooting)
- [üîê Post-Install Security Checks](#-post-install-security-checks)
- [üìå Important Notes for A1502](#-important-notes-for-a1502)
- [üìÑ License & Disclaimer](#-license--disclaimer)

---

## ‚úÖ Prerequisites

### üíª Hardware Requirements

- A1502 MacBook Pro (13-inch, 2015‚Äì2017) powered on
- Charger connected
- Thunderbolt to Ethernet adapter (recommended)
- Working internet (e.g. hotel Wi-Fi)

### ‚öôÔ∏è macOS Recovery Requirements

- Booted into macOS Recovery (`Command + R`)
- Terminal opened via Utilities ‚Üí Terminal
- Wi-Fi connected and captive portal login completed (Safari usable)
- Ethernet connected if available

---

## üß∞ Step-by-Step Commands

### üîé Step 1: Verify Model and Recovery Environment

```bash
system_profiler SPHardwareDataType | grep -E "Model Identifier|Serial Number|Model Name"
nvram -p | grep recovery
```

**Expected Output**: Should show `MacBookPro12,x` or `MacBookPro13,x` and indicate recovery mode.

---

### üåê Step 2: Identify Network Interfaces

```bash
networksetup -listallhardwareports
```

**Example Output**:
```
Hardware Port: Wi-Fi
Device: en0
Hardware Port: Thunderbolt Ethernet
Device: en1
```

---

### üõ° Step 3: Set Secure DNS

```bash
networksetup -setdnsservers "Wi-Fi" 1.1.1.1 1.0.0.1 9.9.9.9 149.112.112.112
networksetup -setdnsservers "Thunderbolt Ethernet" 1.1.1.1 1.0.0.1 9.9.9.9 149.112.112.112
networksetup -ordernetworkservices "Thunderbolt Ethernet" "Wi-Fi"
```

---

### üîÑ Step 4: Reset Network Configuration

```bash
nvram -c                                      # Clear NVRAM variables
nvram boot-args="-no_dns_relay"              # Disable DNS relay (reduces captive portal issues)
ipconfig set en0 DHCP                        # Renew Wi-Fi IP
ipconfig set en1 DHCP                        # Renew Ethernet IP
```

---

### üìù Step 5: Harden the Hosts File

> ‚ö†Ô∏è **Important**: macOS Recovery does not include `nano`. You must use either the heredoc method below (overwrites file) or `vi` manually.

#### ‚úÖ Option A: Overwrite `/etc/hosts` Automatically (Recommended)

```bash
cat > /etc/hosts << 'EOF'
127.0.0.1       localhost
255.255.255.255 broadcasthost
::1             localhost

# Apple Installation Servers (Specific to A1502)
17.253.22.204  swcdn.apple.com
17.253.22.207  gg.apple.com
17.253.22.205  oscdn.apple.com
17.253.22.206  swscan.apple.com
17.253.22.203  mesu.apple.com
17.253.22.202  gdmf.apple.com

# Secure DNS Providers
1.1.1.1        one.one.one.one
9.9.9.9        dns.quad9.net
8.8.8.8        dns.google

# Block Apple Telemetry
0.0.0.0        metrics.icloud.com
0.0.0.0        metrics.apple.com
0.0.0.0        sequoia.apple.com
EOF
```

#### üõ† Option B: Manually Edit with `vi` (Advanced)

```bash
vi /etc/hosts
```

**Basic vi Instructions**:
- Press `i` to enter insert mode
- Paste or type your entries
- Press `Esc` to exit insert mode
- Type `:wq` and press `Enter` to save and exit

---

### üì∂ Step 6: Test Network & Apple Servers

```bash
echo "=== Network Interface Status ==="
ifconfig en0 | grep "status:"
ifconfig en1 | grep "status:"

echo "=== DNS Resolution Test ==="
nslookup apple.com 1.1.1.1
nslookup swcdn.apple.com

echo "=== Ping Apple CDN ==="
ping -c 2 swcdn.apple.com
ping -c 2 gg.apple.com
```

---

### ‚ôªÔ∏è Step 7: Flush DNS and Restart Services

```bash
dscacheutil -flushcache
killall -HUP mDNSResponder
scutil --dns
```

---

### ‚úÖ Step 8: Final DNS Verification

```bash
networksetup -getdnsservers "Wi-Fi"
networksetup -getdnsservers "Thunderbolt Ethernet"

echo "=== Testing Apple Install Servers ==="
for domain in swcdn.apple.com gg.apple.com oscdn.apple.com; do
  echo "Testing $domain:"
  nslookup $domain | grep "Address:"
done
```

---

### üíΩ Step 9: Reinstall macOS

```bash
echo "=== READY FOR INSTALLATION ==="
echo "1. Close Terminal"
echo "2. Select 'Reinstall macOS'"
echo "3. Choose recommended macOS version (Monterey or earlier)"
echo "4. Follow prompts to complete install"
```

---

## üõ†Ô∏è Troubleshooting

<details>
<summary><b>üß© If installation fails or hangs...</b></summary>

### View Installer Logs

```bash
log show --predicate 'process == "osinstaller"' --last 30m
```

### Force Network Renewal

```bash
ipconfig set en0 BOOTP
ipconfig set en1 BOOTP
dscacheutil -flushcache
```

### Check OS Compatibility History

```bash
system_profiler SPInstallHistoryDataType | grep -i "os"
```

### Test Specific Apple Domains

```bash
for domain in swcdn.apple.com gg.apple.com oscdn.apple.com mesu.apple.com; do
  echo "Testing $domain:"
  nslookup $domain
  echo "---"
done
```

</details>

<details>
<summary><b>üåê If DNS resolution fails...</b></summary>

### Reset Network Services

```bash
# Reset Wi-Fi
networksetup -setairportpower en0 off
sleep 2
networksetup -setairportpower en0 on

# Test with different DNS providers
networksetup -setdnsservers "Wi-Fi" 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220
```

### Verify Network Connectivity

```bash
# Check if we can reach the internet
curl -I https://apple.com

# Test specific ports (DNS)
nc -z 1.1.1.1 53
nc -z 8.8.8.8 53
```

</details>

---

## üîê Post-Install Security Checks

After the macOS install completes, reboot into the new system and verify:

```bash
# Confirm DNS settings persisted
networksetup -getdnsservers "Wi-Fi"
scutil --dns | grep "DNSSEC"

# Check encrypted DNS support
dig apple.com +dnssec

# Test DNSSEC validation
dig sigfail.verteiltesysteme.net
dig sigok.verteiltesysteme.net
```

### Optional Cleanup (After Successful Installation)

```bash
# Restore default hosts file
sudo rm /etc/hosts

# Reset to automatic DNS
sudo networksetup -setdnsservers Wi-Fi empty

# Clear custom boot args
sudo nvram -d boot-args
```

---

## üìå Important Notes for A1502

| Feature | Details |
|---------|---------|
| **Ethernet Preferred** | Use Thunderbolt Ethernet adapter for most reliable installation |
| **OS Compatibility** | A1502 supports macOS 10.12 Sierra to 12.x Monterey |
| **Power Required** | Keep charger connected throughout installation |
| **Install Time** | Hotel Wi-Fi installs may take 30‚Äì60 minutes |
| **Security Chip** | A1502 has T1 security chip that may affect network in Recovery |
| **Recovery Types** | Internet Recovery (Cmd+Opt+R) vs Local Recovery (Cmd+R) |

### A1502 Model Specifics:

- **2015 Models**: MacBookPro12,1 - Best with macOS 10.11-12.x
- **2016 Models**: MacBookPro13,1 - Best with macOS 10.12-12.x  
- **2017 Models**: MacBookPro14,1 - Best with macOS 10.13-12.x

---

## üìÑ License & Disclaimer

```text
MIT License

Copyright (c) 2024 A1502 Recovery Guide

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
```

**Disclaimer**: This guide is not affiliated with Apple Inc. Use at your own risk. Always backup important data before system modifications. The authors are not responsible for any data loss or system instability.

---

## ü§ù Contributing

Found an issue or have improvements? 
1. Fork this repository
2. Create a feature branch
3. Submit a pull request with clear description of changes

---

**‚≠ê If this guide helped you, please star the repository!**
```

This GitHub-ready Markdown includes:

- ‚úÖ Proper emoji headers and visual organization
- ‚úÖ Clear safety warnings and prerequisites
- ‚úÖ Collapsible troubleshooting sections
- ‚úÖ Table for A1502-specific notes
- ‚úÖ Complete MIT license with disclaimer
- ‚úÖ Code blocks with proper bash syntax
- ‚úÖ Step-by-step numbered instructions
- ‚úÖ Multiple options for different skill levels
- ‚úÖ Model-specific compatibility information
